{"version":3,"sources":["pages/Home.tsx","utils/shuffle.ts","components/Gallery.tsx","pages/Landscape.tsx","pages/Macro.tsx","components/Header.tsx","store/actions.ts","store/reducer.ts","store/sagas.ts","store/store.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","all","this","props","images","items","a","Object","toConsumableArray","i","length","j","Math","floor","random","_ref","shuffle","values","map","slice","reduce","b","concat","photo","original","path","thumbnail","compressed_path","react_default","createElement","build_image_gallery_default","getPhotos","autoPlay","Component","connect","state","Gallery","albumId","reverse","src","thumbnailWidth","thumbnailHeight","Gallery_default","enableImageSelection","Landscape","components_Gallery","availableLinks","title","link","Header","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","navExpanded","expanded","setState","_this2","links","lib","to","key","onSelect","closeNav","bind","NavLink_default","Navbar","className","expand","onToggle","setNavExpanded","onClick","Brand","Toggle","aria-controls","Collapse","id","Nav","actionTypes","LOAD_IMAGES","INITIAL_PAGE_LOAD","rootReducer","combineReducers","arguments","undefined","type","payload","data","fetchImages","fetchSaga","regenerator_default","wrap","_context","prev","next","put","request","method","url","stop","_marked","_context2","takeEvery","_marked2","axiosClients","default","client","axios","create","baseURL","window","location","href","includes","responseType","timeout","history","createBrowserHistory","basename","sagaMiddleware","createSagaMiddleware","middleware","multiClientMiddleware","routerMiddleware","store","createStore","applyMiddleware","apply","run","sagas","FooterIcon","target","index_es","icon","Footer","fa500px","faInstagram","faTwitter","faGithub","App","es","react_router_dom","Header_Header","Container","style","padding","maxWidth","react_router","exact","component","Macro","Boolean","hostname","match","asyncToGenerator","mark","_callee","dispatch","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70274c1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { ImageData } from '../types';\nimport { RootState } from '../store/store';\nimport { connect } from 'react-redux';\nimport ImageGallery, { ReactImageGalleryItem } from 'react-image-gallery';\nimport shuffle from '../utils/shuffle';\n\nexport interface StateProps {\n  images: ImageData\n}\n\nclass Home extends Component<StateProps> {\n  private getPhotos(): ReactImageGalleryItem[] {\n    const all = this.props.images || {};\n    return shuffle(Object.values(all)\n      .map((images) => images.slice(images.length - 4, images.length))\n      .reduce((a, b) => [...a, ...b], [])\n      .map(photo => ({\n        original: photo.path,\n        thumbnail: photo.compressed_path\n      })));\n  }\n\n  render() {\n    return (\n      <div>\n        <ImageGallery items={this.getPhotos()} autoPlay={true}/>\n      </div>\n    );\n  }\n}\n\nexport function mapStateToProps(state: RootState): StateProps {\n  const images = state.images || {};\n  return {\n    images\n  };\n}\n\n\nexport default connect<StateProps, StateProps, RootState>(\n  mapStateToProps\n)(Home);\n","export default function shuffle<T>(items: T[]): T[] {\n  const a = [...items];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from '../store/store';\nimport { Image, ImageData } from '../types';\n// @ts-ignore\nimport GridGallery from 'react-grid-gallery';\n\nexport interface OuterProps {\n  albumId: string\n}\n\nexport interface StateProps {\n  images: ImageData\n}\n\nclass Gallery extends Component<OuterProps & StateProps> {\n\n  private getPhotos(): Image[] {\n    return this.props.images[this.props.albumId] || [];\n  }\n\n  public render() {\n    const albumPhotos: Image[] = this.getPhotos().reverse();\n    const images = albumPhotos.map(photo => {\n      return {\n        src: photo.path,\n        thumbnail: photo.compressed_path,\n        thumbnailWidth: 320,\n        thumbnailHeight: 212\n      }\n    });\n\n    return images.length === 0 ? '<p>not found</p>' : <GridGallery images={images} enableImageSelection={false}/>\n  }\n}\n\nexport function mapStateToProps(state: RootState): StateProps {\n  const images = state.images || {};\n  return {\n    images\n  };\n}\n\n\nexport default connect<StateProps, OuterProps, RootState>(\n  mapStateToProps\n)(Gallery);\n","import React from 'react';\nimport Gallery from '../components/Gallery';\n\nconst Landscape: React.FC = () => {\n  return (\n    <div>\n      <Gallery albumId=\"Landscape\"/>\n    </div>\n  );\n};\n\nexport default Landscape;\n","import React from 'react';\nimport Gallery from '../components/Gallery';\n\nconst Landscape: React.FC = () => {\n  return (\n    <div>\n      <Gallery albumId=\"Macro\"/>\n    </div>\n  );\n};\n\nexport default Landscape;\n","import React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport NavLink from 'react-bootstrap/NavLink';\n\nconst availableLinks = [{\n  title: 'Landscape',\n  link: '/landscape'\n}, {\n  title: 'Macro',\n  link: '/macro'\n}];\n\ninterface HeaderState {\n  navExpanded: boolean\n}\n\ninterface HeaderProps {\n}\n\nexport default class Header extends Component<HeaderProps, HeaderState> {\n  constructor(props: HeaderProps) {\n    super(props);\n    this.state = {\n      navExpanded: false\n    }\n  }\n\n  private setNavExpanded(expanded: boolean) {\n    this.setState({ navExpanded: expanded });\n  };\n\n  private closeNav() {\n    this.setState({ navExpanded: false });\n  }\n\n  public render() {\n    const links = availableLinks.map(({ title, link }) => {\n      return <LinkContainer to={link} key={link} onSelect={this.closeNav.bind(this)}>\n        <NavLink>{title}</NavLink>\n      </LinkContainer>\n    });\n    return (\n        <Navbar className=\"navbar navbar-dark bg-dark\" expand=\"lg\" onToggle={this.setNavExpanded.bind(this)} expanded={this.state.navExpanded}>\n          <LinkContainer to=\"/\" onClick={this.closeNav.bind(this)}>\n            <Navbar.Brand>Gallery</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {links}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n    );\n  }\n};","export function loadImages() {\n  return {\n    type: actionTypes.LOAD_IMAGES,\n    payload: {\n      request: {\n        method: 'get',\n        url: '/config.json',\n      },\n    },\n  };\n}\n\nexport const actionTypes = {\n  LOAD_IMAGES: 'LOAD_IMAGES',\n  INITIAL_PAGE_LOAD: 'INITIAL_PAGE_LOAD'\n};","import { combineReducers } from 'redux';\nimport { actionTypes } from './actions';\nimport {ImageData} from '../types';\n\ninterface ReducerData {\n  type: string;\n  payload: any\n}\n\nexport function images(state: ImageData = {}, { type, payload }: any) {\n  if (type !== actionTypes.LOAD_IMAGES + '_SUCCESS') {\n    return state;\n  }\n  return (payload.data) as ImageData;\n}\n\nexport const rootReducer = combineReducers({\n  images\n});\n","import { put } from '@redux-saga/core/effects';\nimport { loadImages } from './actions';\nimport { all, takeEvery } from 'redux-saga/effects';\nimport { actionTypes } from './actions';\n\nfunction* fetchImages() {\n  yield put(loadImages());\n}\n\nexport default function* fetchSaga() {\n  yield all([\n    takeEvery(actionTypes.INITIAL_PAGE_LOAD, fetchImages),\n  ]);\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { rootReducer } from './reducer';\nimport axios from 'axios';\nimport { createBrowserHistory } from 'history';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n// @ts-ignore\nimport { multiClientMiddleware } from 'redux-axios-middleware';\nimport sagas from './sagas';\nimport {ImageData} from '../types';\n\nexport interface RootState {\n  images?: ImageData\n}\n\nconst axiosClients = {\n  default: {\n    client: axios.create({\n      baseURL: window.location.href.includes('localhost') ? \"http://photos.klass.li/\" : \"/\",\n      responseType: 'json',\n      timeout: 20000,\n    }),\n  },\n};\n\nconst history = createBrowserHistory({ basename: '/gallery' });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [\n  multiClientMiddleware(axiosClients),\n  sagaMiddleware,\n  routerMiddleware(history),\n];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(sagas);\nexport default store;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { fa500px, faInstagram, faTwitter, faGithub, IconDefinition } from '@fortawesome/free-brands-svg-icons'\n\ninterface FooterIconProps {\n  icon: IconDefinition,\n  link: string\n}\n\nfunction FooterIcon(props: FooterIconProps) {\n  return <a className=\"footerIcon\" href={props.link} target=\"_blank\">\n    <FontAwesomeIcon icon={props.icon}/>\n  </a>\n}\n\nexport default function Footer() {\n  return <div className=\"footer\">\n    <FooterIcon icon={fa500px} link=\"https://500px.com/Klassm\"/>\n    <FooterIcon icon={faInstagram} link=\"http://instagram.com/klassm\"/>\n    <FooterIcon icon={faTwitter} link=\"https://twitter.com/klassm\"/>\n    <FooterIcon icon={faGithub} link=\"https://github.com/klassm\"/>\n  </div>;\n}","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\n\nimport Home from './pages/Home';\nimport Landscape from './pages/Landscape';\nimport Macro from './pages/Macro';\nimport Header from './components/Header';\nimport store from './store/store';\nimport './App.css';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    const containerStyle = {\n      padding: '10px',\n      maxWidth: '1200px'\n    };\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <div>\n            <Router>\n              <div>\n                <Header/>\n                <Container style={containerStyle}>\n                  <Route exact path=\"/\" component={Home}/>\n                  <Route path=\"/macro\" component={Macro}/>\n                  <Route path=\"/landscape\" component={Landscape}/>\n                </Container>\n              </div>\n              <Footer/>\n            </Router>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport store from './store/store';\nimport { actionTypes } from './store/actions';\n\n(async() => {\n  const type: string = actionTypes.INITIAL_PAGE_LOAD;\n  store.dispatch({ type } as any);\n  ReactDOM.render(<App />, document.getElementById('root'));\n})();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}